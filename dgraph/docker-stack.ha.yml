# =========================================
# Dgraph
#
# This file can be used to setup a Dgraph cluster with 6 Dgraph Alphas and 3 Dgraph Zero nodes on a
# Docker Swarm with replication. This setup ensures high availability for both Zero and Alpha.
#
# It expects six virtual machines with hostnames host0, host1, host2, host3, host4 and host5 to
# be part of the swarm. There is a constraint to make sure that each Dgraph Alpha runs on a
# particular host. Dgraph Zero nodes run on host0, host1 and host2.
#
# Data would be persisted to a docker volume called `dgraph-vol` on the virtual machines which are
# part of the swarm.
# Run `docker stack deploy -c docker-stack.ha.yml` on the Swarm leader to start the cluster.
#
# Requires:
# - Docker Engine 17.12.0+
# - Docker Compose 1.18.0+
# =========================================
version: "3.5"

# Networks
networks:
  dgraph-net:
    name: database-net
    external: true

# Volumes
volumes:
  dgraph-vol:
    name: dgraph-vol
    external: true

# Services
services:
  zero0:
    image: dgraph/dgraph:v21.03.1
    command: dgraph zero --my=zero0:5080 --replicas 3 --raft="idx=1"
    networks:
      - dgraph-net
    # ports:
    #   - 5080:5080
    #   - 6080:6080
    restart: unless-stopped
    volumes:
      - dgraph-vol:/dgraph
    deploy:
      placement:
        constraints:
          - node.hostname == host0

  zero1:
    image: dgraph/dgraph:v21.03.1
    command: dgraph zero --my=zero2:5081 --replicas 3 --raft="idx=2" --peer zero0:5080
    networks:
      - dgraph-net
    # ports:
    #   - 5081:5081
    #   - 6081:6081
    restart: unless-stopped
    volumes:
      - dgraph-vol:/dgraph
    deploy:
      placement:
        constraints:
          - node.hostname == host1

  zero2:
    image: dgraph/dgraph:v21.03.1
    command: dgraph zero --my=zero2:5082 --replicas 3 --raft="idx=3" --peer zero0:5080
    networks:
      - dgraph-net
    # ports:
    #   - 5082:5082
    #   - 6082:6082
    restart: unless-stopped
    volumes:
      - dgraph-vol:/dgraph
    deploy:
      placement:
        constraints:
          - node.hostname == host2

  alpha0:
    image: dgraph/dgraph:v21.03.1
    command: dgraph alpha --my=alpha0:7080 --zero=zero0:5080,zero1:5081,zero2:5082
    networks:
      - dgraph-net
    ports:
      - 8080:8080
      - 9080:9080
    restart: unless-stopped
    volumes:
      - dgraph-vol:/dgraph
    deploy:
      placement:
        constraints:
          - node.hostname == host0

  alpha1:
    image: dgraph/dgraph:v21.03.1
    command: dgraph alpha --my=alpha1:7081 --zero=zero0:5080,zero1:5081,zero2:5082 -o 1
    networks:
      - dgraph-net
    # ports:
    #   - 8081:8081
    #   - 9081:9081
    restart: unless-stopped
    volumes:
      - dgraph-vol:/dgraph
    deploy:
      placement:
        constraints:
          - node.hostname == host1

  alpha2:
    image: dgraph/dgraph:v21.03.1
    command: dgraph alpha --my=alpha2:7082 --zero=zero0:5080,zero1:5081,zero2:5082 -o 2
    networks:
      - dgraph-net
    # ports:
    #   - 8082:8082
    #   - 9082:9082
    restart: unless-stopped
    volumes:
      - dgraph-vol:/dgraph
    deploy:
      placement:
        constraints:
          - node.hostname == host2

  alpha3:
    image: dgraph/dgraph:v21.03.1
    command: dgraph alpha --my=alpha3:7083 --zero=zero0:5080,zero1:5081,zero2:5082 -o 3
    networks:
      - dgraph-net
    # ports:
    #   - 8083:8083
    #   - 9083:9083
    restart: unless-stopped
    volumes:
      - dgraph-vol:/dgraph
    deploy:
      placement:
        constraints:
          - node.hostname == host3

  alpha4:
    image: dgraph/dgraph:v21.03.1
    command: dgraph alpha --my=alpha4:7084 --zero=zero0:5080,zero1:5081,zero2:5082 -o 4
    networks:
      - dgraph-net
    # ports:
    #   - 8084:8084
    #   - 9084:9084
    restart: unless-stopped
    volumes:
      - dgraph-vol:/dgraph
    deploy:
      placement:
        constraints:
          - node.hostname == host4

  alpha5:
    image: dgraph/dgraph:v21.03.1
    command: dgraph alpha --my=alpha5:7085 --zero=zero0:5080,zero1:5081,zero2:5082 -o 5
    networks:
      - dgraph-net
    # ports:
    #   - 8085:8085
    #   - 9085:9085
    restart: unless-stopped
    volumes:
      - dgraph-vol:/dgraph
    deploy:
      placement:
        constraints:
          - node.hostname == host5
